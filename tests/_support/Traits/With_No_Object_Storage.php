<?php

namespace Tribe\Tickets\Test\Traits;

use PHPUnit\Framework\Assert;

trait With_No_Object_Storage {
	protected function assert_no_object_stored( array $stored ) {
		foreach ( $stored as $key => $meta ) {
			if ( is_array( $meta ) ) {
				$this->assert_no_object_stored( $meta );
			}

			$maybe_unserialize = maybe_unserialize( $meta );

			// Assert that the value is not an object.
			Assert::assertTrue( ! is_object( $maybe_unserialize ), sprintf( 'Object stored for key %s', $key ) );

			// If we have an array, assert that each value is not an object.
			if ( is_array( $maybe_unserialize ) ) {
				$this->assert_array_does_not_contain_objects( $maybe_unserialize );
			}
		}
	}

	/**
	 * Assert that an array does not contain objects.
	 *
	 * @param array $items The array of items, generated by maybe_unserialize.
	 */
	protected function assert_array_does_not_contain_objects( array $items ) {
		foreach ( $items as $key => $item ) {
			if ( is_array( $item ) ) {
				$this->assert_array_does_not_contain_objects( $item );
			}

			// Assert that the value is not an object.
			$this->assertTrue( ! is_object( $item ), sprintf( 'Object stored for key %s', $key ) );
		}
	}
}
